var caasClient;(()=>{var e={912:e=>{let a,s="",t=null,n=null;function r(e,a){let s=document.createElement("a");s.setAttribute("download",a),s.href=function(e){let a=new Blob([e],{type:"application/octet-stream"});return window.URL.createObjectURL(a)}(e),document.body.appendChild(s),window.requestAnimationFrame((function(){let e=new MouseEvent("click");s.dispatchEvent(e),document.body.removeChild(s)}))}async function c(e,r="",c={}){let i={conversionCommandLine:c.conversionCommandLine,skipConversion:c.skipConversion,hcVersion:c.hcVersion,webhook:n,startPath:r,accessPassword:s,accessKey:t},o=await fetch(a+"/caas_api/upload",{method:"POST",body:e,headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()}async function i(e){let n={accessPassword:s,accessKey:t};e instanceof Array&&(n.storageIDs=e);try{let s=await fetch(a+"/caas_api/data/"+(n.storageIDs?"":e),{headers:{"CS-API-Arg":JSON.stringify(n)}});return await s.json()}catch(e){return{ERROR:"Conversion Service can't be reached"}}}e.exports={init:function(e,r=null){a=e,r&&(s=r.accessPassword?r.accessPassword:"",t=r.accessKey,n=r.webhook)},waitUntilConverted:async function(e,a=1e3){return new Promise((async(s,t)=>{let n=setInterval((async()=>{let a=await i(e);"PENDING"!=a.conversionState&&(clearInterval(n),s(a.conversionState))}),a)}))},getInfo:async function(){let e={accessPassword:s,accessKey:t},n=await fetch(a+"/caas_api/info",{headers:{"CS-API-Arg":JSON.stringify(e)}});return await n.json()},uploadModel:async function(e,a,s="",t={}){let n=new FormData;return n.append("file",a,e),await c(n,s,t)},uploadModelFromFileInput:async function(e,a="",s={}){return new Promise(((t,n)=>{let r=new FileReader;var c;r.onload=(c=e,async function(e){let n=await caasClient.uploadModel(c.name,new Blob([e.target.result]),a,s);n.inputfilename=c.name,t(n)}),r.readAsArrayBuffer(e)}))},uploadModelFromFile:async function(e,a="",s={}){let t=new FormData;return t.append("file",fs.createReadStream(e)),await c(t,a,s)},uploadModelFromFiles:async function(e,r="",c={}){let i=new FormData,o=0;for(let a=0;a<e.length;a++)i.append("files",fs.createReadStream(e[a])),o+=fs.statSync(e[a]).size;let d={conversionCommandLine:c.conversionCommandLine,skipConversion:c.skipConversion,hcVersion:c.hcVersion,webhook:n,rootFile:r,accessPassword:s,accessKey:t},u=await fetch(a+"/caas_api/uploadArray",{method:"POST",body:i,headers:{"CS-API-Arg":JSON.stringify(d)}});return{totalsize:o,data:await u.json()}},getUploadToken:async function(e,r,c={}){let i,o={hcVersion:c.hcVersion,webhook:n,accessPassword:s,accessKey:t,storageID:c.storageID};try{i=await fetch(a+"/caas_api/uploadToken/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(o)}})}catch(e){return console.log(e),{ERROR:"Conversion Service can't be reached"}}return await i.json()},getDownloadToken:async function(e,n){let r,c={accessPassword:s,accessKey:t};try{r=await fetch(a+"/caas_api/downloadToken/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(c)}})}catch(e){return console.log(e),{ERROR:"Conversion Service can't be reached"}}return await r.json()},createEmptyModel:async function(e,r={}){let c={hcVersion:r.hcVersion,itemname:e,webhook:n,accessPassword:s,accessKey:t,startPath:r.startPath,processShattered:r.processShattered,conversionCommandLine:r.conversionCommandLine,skipConversion:r.skipConversion},i=await fetch(a+"/caas_api/create",{method:"put",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},reconvertModel:async function(e,n={}){let r={hcVersion:n.hcVersion,accessPassword:s,accessKey:t,startPath:n.startPath,multiConvert:n.multiConvert,conversionCommandLine:n.conversionCommandLine,processShattered:n.processShattered,overrideItem:n.overrideItem,waitUntilConversionDone:n.waitUntilConversionDone},c=await fetch(a+"/caas_api/reconvert/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(r)}});return await c.json()},createCustomImage:async function(e,n={}){let r={accessPassword:s,accessKey:t,customImageCode:n.customImageCode,conversionCommandLine:n.conversionCommandLine},c=await fetch(a+"/caas_api/customImage/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(r)}});return await c.json()},getFileByType:async function(e,n,c=null){let i={accessPassword:s,accessKey:t},o=await fetch(a+"/caas_api/file/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(i)}});if(404==o.status)return{ERROR:"File not found"};{let e=await o.arrayBuffer();return c&&("undefined"!=typeof fs?fs.writeFileSync(c,Buffer.from(e)):r(e,c)),e}},getFileByName:async function(e,n,c=null){let i={accessPassword:s,accessKey:t},o=await fetch(a+"/caas_api/fileByName/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(i)}});if(404==o.status)return{ERROR:"File not found"};{let e=await o.arrayBuffer();return c&&("undefined"!=typeof fs?fs.writeFileSync(c,Buffer.from(e)):r(e,c)),e}},deleteModel:async function(e){let n={accessPassword:s,accessKey:t},r=await fetch(a+"/caas_api/delete/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(n)}});return await r.json()},getStreamingSession:async function(e={}){let n={accessPassword:s,accessKey:t,hcVersion:e.hcVersion,geo:e.geo,renderType:e.renderType,accessItems:e.accessItems},r=await fetch(a+"/caas_api/streamingSession",{headers:{"CS-API-Arg":JSON.stringify(n)}}),c=await r.json();return c.ERROR||(c.endpointUri=("443"==c.port?"wss://":"ws://")+c.serverurl+":"+c.port+"?token="+c.sessionid),c},enableStreamAccess:async function(e,n,r={}){r.accessPassword=s,r.accessKey=t;let c=await fetch(a+"/caas_api/enableStreamAccess/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(r),items:JSON.stringify(n)}});return await c.json()},getModels:async function(){let e={accessPassword:s,accessKey:t},n=await fetch(a+"/caas_api/items",{headers:{"CS-API-Arg":JSON.stringify(e)}});return await n.json()},getModelData:i,getStatus:async function(e){let n={accessPassword:s,accessKey:t},r=await fetch(a+"/caas_api/status"+(e?"/true":""),{headers:{"CS-API-Arg":JSON.stringify(n)}});return await r.json()},generateAPIKey:async function(e,n,r){let c={name:e,accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/generateAPIKey",{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},addUser:async function(e,n=1,r=void 0,c=void 0,i=void 0,o=void 0,d=void 0,u=void 0){let w=JSON.stringify({firstName:o,lastName:d,email:e,password:i,organizationID:u,role:n}),f={accessPassword:s,accessKey:t,email:r,password:c},y=await fetch(a+"/caas_api/accounts/addUser",{body:w,mode:"cors",method:"POST",headers:{"CS-API-Arg":JSON.stringify(f),"Content-type":"application/json; charset=UTF-8"}});return await y.json()},checkPassword:async function(e,n){let r={accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/accounts/checkPassword/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(r)}});return await c.json()},getUserInfo:async function(e,n){let r={accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/accounts/userInfo/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(r)}});return await c.json()},changeOrgName:async function(e,n,r,c){let i={accessPassword:s,accessKey:t},o=await fetch(a+"/caas_api/accounts/changeOrgName/"+e+"/"+n+"/"+r+"/"+c,{method:"put",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},retrieveInvite:async function(e){let n={accessPassword:s,accessKey:t},r=await fetch(a+"/caas_api/accounts/retrieveInvite/"+e,{headers:{"CS-API-Arg":JSON.stringify(n)}});return await r.json()},acceptInvite:async function(e,n){let r={accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/accounts/acceptInvite/"+e+(n?"/"+n:""),{method:"put",headers:{"CS-API-Arg":JSON.stringify(r)}});return await c.json()},getUsers:async function(e,n,r){let c={accessPassword:s,accessKey:t},i=await fetch(a+"/caas_api/accounts/getUsers/"+e+"/"+n+(r?"/"+r:""),{headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},removeUser:async function(e,n,r=void 0,c=void 0){let i={accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/removeUser/"+e+"/"+n,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},updateUser:async function(e,n=void 0,r=void 0,c=void 0,i=void 0,o=void 0,d=void 0,u=void 0){let w=JSON.stringify({firstName:o,lastName:d,email:e,password:i,organizationID:u,role:n}),f={accessPassword:s,accessKey:t,email:r,password:c},y=await fetch(a+"/caas_api/accounts/updateUser",{body:w,mode:"cors",method:"POST",headers:{"CS-API-Arg":JSON.stringify(f),"Content-type":"application/json; charset=UTF-8"}});return await y.json()},addOrganization:async function(e,n,r){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/addOrganization/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getOrganizations:async function(e,n,r=!1){let c={accessPassword:s,accessKey:t,email:e,password:n},i=await fetch(a+"/caas_api/accounts/getOrganizations"+(r?"/"+r:""),{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getOrganization:async function(e,n,r){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/getOrganization/"+e,{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},switchOrganization:async function(e,n,r){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/switchOrganization/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getAPIKeys:async function(e,n){let r={accessPassword:s,accessKey:t,email:e,password:n},c=await fetch(a+"/caas_api/accounts/getAPIKeys",{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(r)}});return await c.json()},invalidateAPIKey:async function(e,n,r){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/invalidateAPIKey/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},editAPIKey:async function(e,n,r,c){let i={name:n,accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/editAPIKey/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},updateOrgTokens:async function(e,n,r,c){let i={accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/updateOrgTokens/"+e+"/"+n,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},updatePassword:async function(e,n,r){let c={newpassword:e,accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/updatePassword",{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getStatsByMonth:async function(e,n,r,c,i){let o={accessPassword:s,accessKey:t,email:c,password:i},d=await fetch(a+"/caas_api/accounts/getStatsByMonth/"+e+"/"+n+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(o)}});return await d.json()},injectStats:async function(e,n,r,c){let i={stats:n,accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/injectStats/"+e,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},initializeWebViewer:function(e,a){return a||(a={}),new Communicator.WebViewer({containerId:a&&a.containerId?a.containerId:"viewer",endpointUri:e.endpointUri,model:a.model?a.model:"_empty",rendererType:e.renderType&&"server"==e.renderType?Communicator.RendererType.Server:Communicator.RendererType.Client})},getFiles:async function(e,n,r){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/getFiles/"+e,{headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},setAccessKey:function(e){t=e},deleteAuth:async function(e,n,r,c){let i={accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/deleteAuth/"+e+"/"+n,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getItemFromType:async function(e,n,r,c,i){let o={accessPassword:s,accessKey:t,email:c,password:i},d=await fetch(a+"/caas_api/accounts/getItemFromType/"+e+"/"+n+(r?"/"+r:""),{headers:{"CS-API-Arg":JSON.stringify(o)}});return 404==d.status?{ERROR:"File not found"}:await d.arrayBuffer()},setSuperUser:async function(e,n,r=void 0,c=void 0){let i={accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/setSuperUser/"+e+"/"+n,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},deleteUser:async function(e,n=void 0,r=void 0){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/deleteUser/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},deleteOrganization:async function(e,n=void 0,r=void 0){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/deleteOrganization/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},updateOrgMaxStorage:async function(e,n,r,c){let i={accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/updateOrgMaxStorage/"+e+"/"+n,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},resetPassword:async function(e,n=void 0,r=void 0){let c={accessPassword:s,accessKey:t,email:n,password:r},i=await fetch(a+"/caas_api/accounts/resetPassword/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(c)}});return await i.json()},getDataAuth:async function(e,n,r,c){let i={accessPassword:s,accessKey:t,email:r,password:c},o=await fetch(a+"/caas_api/accounts/getDataAuth/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},uploadModels:async function(e,r,c="",i={}){let o=new FormData,d=0;for(let a=0;a<e.length;a++)o.append("files",r[a],e[a]),d+=r[a].size;let u={conversionCommandLine:i.conversionCommandLine,skipConversion:i.skipConversion,hcVersion:i.hcVersion,webhook:n,rootFile:c,accessPassword:s,accessKey:t},w=await fetch(a+"/caas_api/uploadArray",{method:"POST",body:o,headers:{"CS-API-Arg":JSON.stringify(u)}});return{totalsize:d,data:await w.json()}}}}},a={},s=function s(t){var n=a[t];if(void 0!==n)return n.exports;var r=a[t]={exports:{}};return e[t](r,r.exports,s),r.exports}(912);caasClient=s})();