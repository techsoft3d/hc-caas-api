var caasClient;(()=>{var e={912:e=>{let a,s="",t=null,r=null;function n(e,a){let s=document.createElement("a");s.setAttribute("download",a),s.href=function(e){let a=new Blob([e],{type:"application/octet-stream"});return window.URL.createObjectURL(a)}(e),document.body.appendChild(s),window.requestAnimationFrame((function(){let e=new MouseEvent("click");s.dispatchEvent(e),document.body.removeChild(s)}))}async function i(e,n="",i={}){let o={conversionCommandLine:i.conversionCommandLine,skipConversion:i.skipConversion,hcVersion:i.hcVersion,webhook:r,startPath:n,accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/upload",{method:"POST",body:e,headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()}async function o(e){let r={accessPassword:s,accessKey:t};e instanceof Array&&(r.itemids=e);try{let s=await fetch(a+"/caas_api/data/"+(r.itemids?"":e),{headers:{"CS-API-Arg":JSON.stringify(r)}});return await s.json()}catch(e){return{ERROR:"Conversion Service can't be reached"}}}e.exports={init:function(e,n=null){a=e,n&&(s=n.accessPassword?n.accessPassword:"",t=n.accessKey,r=n.webhook)},waitUntilConverted:async function(e,a=1e3){return new Promise((async(s,t)=>{let r=setInterval((async()=>{let a=await o(e);"PENDING"!=a.conversionState&&(clearInterval(r),s(a.conversionState))}),a)}))},getInfo:async function(){let e={accessPassword:s,accessKey:t},r=await fetch(a+"/caas_api/info",{headers:{"CS-API-Arg":JSON.stringify(e)}});return await r.json()},uploadModel:async function(e,a,s="",t={}){let r=new FormData;return r.append("file",a,e),await i(r,s,t)},uploadModelFromFileInput:async function(e,a="",s={}){return new Promise(((t,r)=>{let n=new FileReader;var i;n.onload=(i=e,async function(e){let r=await caasClient.uploadModel(i.name,new Blob([e.target.result]),a,s);r.inputfilename=i.name,t(r)}),n.readAsArrayBuffer(e)}))},uploadModelFromFile:async function(e,a="",s={}){let t=new FormData;return t.append("file",fs.createReadStream(e)),await i(t,a,s)},uploadModelFromFiles:async function(e,n="",i={}){let o=new FormData,c=0;for(let a=0;a<e.length;a++)o.append("files",fs.createReadStream(e[a])),c+=fs.statSync(e[a]).size;let d={conversionCommandLine:i.conversionCommandLine,skipConversion:i.skipConversion,hcVersion:i.hcVersion,webhook:r,rootFile:n,accessPassword:s,accessKey:t},w=await fetch(a+"/caas_api/uploadArray",{method:"POST",body:o,headers:{"CS-API-Arg":JSON.stringify(d)}});return{totalsize:c,data:await w.json()}},getUploadToken:async function(e,n,i={}){let o,c={hcVersion:i.hcVersion,webhook:r,accessPassword:s,accessKey:t,storageid:i.storageid};try{o=await fetch(a+"/caas_api/uploadToken/"+e+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(c)}})}catch(e){return console.log(e),{ERROR:"Conversion Service can't be reached"}}return await o.json()},getDownloadToken:async function(e,r){let n,i={accessPassword:s,accessKey:t};try{n=await fetch(a+"/caas_api/downloadToken/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(i)}})}catch(e){return console.log(e),{ERROR:"Conversion Service can't be reached"}}return await n.json()},createEmptyModel:async function(e,n={}){let i={hcVersion:n.hcVersion,itemname:e,webhook:r,accessPassword:s,accessKey:t,startPath:n.startPath,processShattered:n.processShattered,conversionCommandLine:n.conversionCommandLine,skipConversion:n.skipConversion},o=await fetch(a+"/caas_api/create",{method:"put",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},reconvertModel:async function(e,r={}){let n={hcVersion:r.hcVersion,accessPassword:s,accessKey:t,startPath:r.startPath,multiConvert:r.multiConvert,conversionCommandLine:r.conversionCommandLine,processShattered:r.processShattered,overrideItem:r.overrideItem,waitUntilConversionDone:r.waitUntilConversionDone},i=await fetch(a+"/caas_api/reconvert/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(n)}});return await i.json()},createCustomImage:async function(e,r){let n=r||{},i={accessPassword:s,accessKey:t,customImageCode:n.customImageCode,conversionCommandLine:n.conversionCommandLine},o=await fetch(a+"/caas_api/customImage/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getFileByType:async function(e,r,i=null){let o={accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/file/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(o)}});if(404==c.status)return{ERROR:"File not found"};{let e=await c.arrayBuffer();return i&&("undefined"!=typeof fs?fs.writeFileSync(i,Buffer.from(e)):n(e,i)),e}},getFileByName:async function(e,r,i=null){let o={accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/fileByName/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(o)}});if(404==c.status)return{ERROR:"File not found"};{let e=await c.arrayBuffer();return i&&("undefined"!=typeof fs?fs.writeFileSync(i,Buffer.from(e)):n(e,i)),e}},deleteModel:async function(e){let r={accessPassword:s,accessKey:t},n=await fetch(a+"/caas_api/delete/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(r)}});return await n.json()},getStreamingSession:async function(e=void 0,r=null,n=void 0,i=void 0){let o={hcVersion:i,accessPassword:s,accessKey:t,geo:e,renderType:r,accessItems:n},c=await fetch(a+"/caas_api/streamingSession",{headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},enableStreamAccess:async function(e,r){let n={accessPassword:s,accessKey:t},i=await fetch(a+"/caas_api/enableStreamAccess/"+e,{method:"put",headers:{"CS-API-Arg":JSON.stringify(n),items:JSON.stringify(r)}});return await i.json()},getModels:async function(){let e={accessPassword:s,accessKey:t},r=await fetch(a+"/caas_api/items",{headers:{"CS-API-Arg":JSON.stringify(e)}});return await r.json()},getModelData:o,getStatus:async function(e){let r={accessPassword:s,accessKey:t},n=await fetch(a+"/caas_api/status"+(e?"/true":""),{headers:{"CS-API-Arg":JSON.stringify(r)}});return await n.json()},generateAPIKey:async function(e,r,n){let i={name:e,accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/generateAPIKey",{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},addUser:async function(e,r=1,n=void 0,i=void 0,o=void 0,c=void 0,d=void 0,w=void 0){let f=JSON.stringify({firstName:c,lastName:d,email:e,password:o,organizationID:w,role:r}),y={accessPassword:s,accessKey:t,email:n,password:i},l=await fetch(a+"/caas_api/addUser",{body:f,mode:"cors",method:"POST",headers:{"CS-API-Arg":JSON.stringify(y),"Content-type":"application/json; charset=UTF-8"}});return await l.json()},checkPassword:async function(e,r){let n={accessPassword:s,accessKey:t},i=await fetch(a+"/caas_api/checkPassword/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(n)}});return await i.json()},getUserInfo:async function(e,r){let n={accessPassword:s,accessKey:t},i=await fetch(a+"/caas_api/userInfo/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(n)}});return await i.json()},changeOrgName:async function(e,r,n,i){let o={accessPassword:s,accessKey:t},c=await fetch(a+"/caas_api/changeOrgName/"+e+"/"+r+"/"+n+"/"+i,{method:"put",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},retrieveInvite:async function(e){let r={accessPassword:s,accessKey:t},n=await fetch(a+"/caas_api/retrieveInvite/"+e,{headers:{"CS-API-Arg":JSON.stringify(r)}});return await n.json()},acceptInvite:async function(e,r){let n={accessPassword:s,accessKey:t},i=await fetch(a+"/caas_api/acceptInvite/"+e+(r?"/"+r:""),{method:"put",headers:{"CS-API-Arg":JSON.stringify(n)}});return await i.json()},getUsers:async function(e,r,n){let i={accessPassword:s,accessKey:t},o=await fetch(a+"/caas_api/getUsers/"+e+"/"+r+(n?"/"+n:""),{headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},removeUser:async function(e,r,n=void 0,i=void 0){let o={accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/removeUser/"+e+"/"+r,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},updateUser:async function(e,r=void 0,n=void 0,i=void 0,o=void 0,c=void 0,d=void 0,w=void 0){let f=JSON.stringify({firstName:c,lastName:d,email:e,password:o,organizationID:w,role:r}),y={accessPassword:s,accessKey:t,email:n,password:i},l=await fetch(a+"/caas_api/updateUser",{body:f,mode:"cors",method:"POST",headers:{"CS-API-Arg":JSON.stringify(y),"Content-type":"application/json; charset=UTF-8"}});return await l.json()},addOrganization:async function(e,r,n){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/addOrganization/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getOrganizations:async function(e,r,n=!1){let i={accessPassword:s,accessKey:t,email:e,password:r},o=await fetch(a+"/caas_api/getOrganizations"+(n?"/"+n:""),{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getOrganization:async function(e,r,n){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/getOrganization/"+e,{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},switchOrganization:async function(e,r,n){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/switchOrganization/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getAPIKeys:async function(e,r){let n={accessPassword:s,accessKey:t,email:e,password:r},i=await fetch(a+"/caas_api/getAPIKeys",{mode:"cors",headers:{"CS-API-Arg":JSON.stringify(n)}});return await i.json()},invalidateAPIKey:async function(e,r,n){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/invalidateAPIKey/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},editAPIKey:async function(e,r,n,i){let o={name:r,accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/editAPIKey/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},updateOrgTokens:async function(e,r,n,i){let o={accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/updateOrgTokens/"+e+"/"+r,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},updatePassword:async function(e,r,n){let i={newpassword:e,accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/updatePassword",{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getStatsByMonth:async function(e,r,n,i,o){let c={accessPassword:s,accessKey:t,email:i,password:o},d=await fetch(a+"/caas_api/getStatsByMonth/"+e+"/"+r+"/"+n,{headers:{"CS-API-Arg":JSON.stringify(c)}});return await d.json()},injectStats:async function(e,r,n,i){let o={stats:r,accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/injectStats/"+e,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},initializeWebViewer:function(e,a){return a||(a={}),new Communicator.WebViewer({containerId:a&&a.containerId?a.containerId:"viewer",endpointUri:("443"==e.port?"wss://":"ws://")+e.serverurl+":"+e.port+"?token="+e.sessionid,model:a.model?a.model:"_empty",rendererType:e.renderType&&"server"==e.renderType?Communicator.RendererType.Server:Communicator.RendererType.Client})},getFiles:async function(e,r,n){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/getFiles/"+e,{headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},setAccessKey:function(e){t=e},deleteAuth:async function(e,r,n,i){let o={accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/deleteAuth/"+e+"/"+r,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},getItemFromType:async function(e,r,n,i,o){let c={accessPassword:s,accessKey:t,email:i,password:o},d=await fetch(a+"/caas_api/getItemFromType/"+e+"/"+r+(n?"/"+n:""),{headers:{"CS-API-Arg":JSON.stringify(c)}});return 404==d.status?{ERROR:"File not found"}:await d.arrayBuffer()},setSuperUser:async function(e,r,n=void 0,i=void 0){let o={accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/setSuperUser/"+e+"/"+r,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},deleteUser:async function(e,r=void 0,n=void 0){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/deleteUser/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},deleteOrganization:async function(e,r=void 0,n=void 0){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/deleteOrganization/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},updateOrgMaxStorage:async function(e,r,n,i){let o={accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/updateOrgMaxStorage/"+e+"/"+r,{method:"PUT",headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},resetPassword:async function(e,r=void 0,n=void 0){let i={accessPassword:s,accessKey:t,email:r,password:n},o=await fetch(a+"/caas_api/resetPassword/"+e,{mode:"cors",method:"PUT",headers:{"CS-API-Arg":JSON.stringify(i)}});return await o.json()},getDataAuth:async function(e,r,n,i){let o={accessPassword:s,accessKey:t,email:n,password:i},c=await fetch(a+"/caas_api/getDataAuth/"+e+"/"+r,{headers:{"CS-API-Arg":JSON.stringify(o)}});return await c.json()},uploadModels:async function(e,n,i="",o={}){let c=new FormData,d=0;for(let a=0;a<e.length;a++)c.append("files",n[a],e[a]),d+=n[a].size;let w={conversionCommandLine:o.conversionCommandLine,skipConversion:o.skipConversion,hcVersion:o.hcVersion,webhook:r,rootFile:i,accessPassword:s,accessKey:t},f=await fetch(a+"/caas_api/uploadArray",{method:"POST",body:c,headers:{"CS-API-Arg":JSON.stringify(w)}});return{totalsize:d,data:await f.json()}}}}},a={},s=function s(t){var r=a[t];if(void 0!==r)return r.exports;var n=a[t]={exports:{}};return e[t](n,n.exports,s),n.exports}(912);caasClient=s})();